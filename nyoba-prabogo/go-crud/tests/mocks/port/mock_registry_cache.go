// Code generated by MockGen. DO NOT EDIT.
// Source: registry_cache.go

// Package mock_outbound_port is a generated GoMock package.
package mock_outbound_port

import (
	outbound_port "prabogo/internal/port/outbound"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCachePort is a mock of CachePort interface.
type MockCachePort struct {
	ctrl     *gomock.Controller
	recorder *MockCachePortMockRecorder
}

// MockCachePortMockRecorder is the mock recorder for MockCachePort.
type MockCachePortMockRecorder struct {
	mock *MockCachePort
}

// NewMockCachePort creates a new mock instance.
func NewMockCachePort(ctrl *gomock.Controller) *MockCachePort {
	mock := &MockCachePort{ctrl: ctrl}
	mock.recorder = &MockCachePortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCachePort) EXPECT() *MockCachePortMockRecorder {
	return m.recorder
}

// Client mocks base method.
func (m *MockCachePort) Client() outbound_port.ClientCachePort {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Client")
	ret0, _ := ret[0].(outbound_port.ClientCachePort)
	return ret0
}

// Client indicates an expected call of Client.
func (mr *MockCachePortMockRecorder) Client() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Client", reflect.TypeOf((*MockCachePort)(nil).Client))
}
